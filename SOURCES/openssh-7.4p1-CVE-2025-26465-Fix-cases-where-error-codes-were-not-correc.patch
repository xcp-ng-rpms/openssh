Backport notes:
Drop comment on the original commit about last update.
Adapt the patch to our version by adding r as return value.

Original commit:
From 0832aac79517611dd4de93ad0a83577994d9c907 Mon Sep 17 00:00:00 2001
From: "djm@openbsd.org" <djm@openbsd.org>
Date: Tue, 18 Feb 2025 08:02:48 +0000
Subject: [PATCH] upstream: Fix cases where error codes were not correctly set

Reported by the Qualys Security Advisory team. ok markus@

OpenBSD-Commit-ID: 7bcd4ffe0fa1e27ff98d451fb9c22f5fae6e610d
Backported-by: Lucas Ravagnier <lucas.ravagnier@vates.tech>
---
 krl.c         | 2 ++
 sshconnect2.c | 7 +++++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/krl.c b/krl.c
index e2efdf066..0d0f69534 100644
--- a/krl.c
+++ b/krl.c
@@ -647,6 +647,7 @@ revoked_certs_generate(struct revoked_certs *rc, struct sshbuf *buf)
 			break;
 		case KRL_SECTION_CERT_SERIAL_BITMAP:
 			if (rs->lo - bitmap_start > INT_MAX) {
+				r = SSH_ERR_INVALID_FORMAT;
 				error("%s: insane bitmap gap", __func__);
 				goto out;
 			}
@@ -947,6 +948,7 @@ ssh_krl_from_blob(struct sshbuf *buf, struct ssh_krl **krlp,
 		goto out;
 
 	if ((krl = ssh_krl_init()) == NULL) {
+		r = SSH_ERR_ALLOC_FAIL;
 		error("%s: alloc failed", __func__);
 		goto out;
 	}
diff --git a/sshconnect2.c b/sshconnect2.c
index a69c4da18..1ee6000ab 100644
--- a/sshconnect2.c
+++ b/sshconnect2.c
@@ -650,6 +650,7 @@ input_userauth_pk_ok(int type, u_int32_t seq, void *ctxt)
 	u_int alen, blen;
 	char *pkalg, *fp;
 	u_char *pkblob;
+	int r = 0;
 
 	if (authctxt == NULL)
 		fatal("input_userauth_pk_ok: no authentication context");
@@ -671,6 +672,7 @@ input_userauth_pk_ok(int type, u_int32_t seq, void *ctxt)
 
 	if ((pktype = key_type_from_name(pkalg)) == KEY_UNSPEC) {
 		debug("unknown pkalg %s", pkalg);
+		r = SSH_ERR_INVALID_FORMAT;
 		goto done;
 	}
 	if ((key = key_from_blob(pkblob, blen)) == NULL) {
@@ -681,6 +683,7 @@ input_userauth_pk_ok(int type, u_int32_t seq, void *ctxt)
 		error("input_userauth_pk_ok: type mismatch "
 		    "for decoded key (received %d, expected %d)",
 		    key->type, pktype);
+		r = SSH_ERR_INVALID_FORMAT;
 		goto done;
 	}
 	if ((fp = sshkey_fingerprint(key, options.fingerprint_hash[0],
@@ -707,9 +710,9 @@ done:
 	free(pkblob);
 
 	/* try another method if we did not send a packet */
-	if (sent == 0)
+	if (r == 0 && sent == 0)
 		userauth(authctxt, NULL);
-	return 0;
+	return r;
 }
 
 #ifdef GSSAPI
-- 
2.47.0

